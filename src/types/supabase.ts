/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/apikeys": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apikeys.id"];
          created_at?: parameters["rowFilter.apikeys.created_at"];
          user_id?: parameters["rowFilter.apikeys.user_id"];
          key?: parameters["rowFilter.apikeys.key"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["apikeys"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** apikeys */
          apikeys?: definitions["apikeys"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apikeys.id"];
          created_at?: parameters["rowFilter.apikeys.created_at"];
          user_id?: parameters["rowFilter.apikeys.user_id"];
          key?: parameters["rowFilter.apikeys.key"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apikeys.id"];
          created_at?: parameters["rowFilter.apikeys.created_at"];
          user_id?: parameters["rowFilter.apikeys.user_id"];
          key?: parameters["rowFilter.apikeys.key"];
        };
        body: {
          /** apikeys */
          apikeys?: definitions["apikeys"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/apps": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apps.id"];
          created_at?: parameters["rowFilter.apps.created_at"];
          name?: parameters["rowFilter.apps.name"];
          version?: parameters["rowFilter.apps.version"];
          bucket_id?: parameters["rowFilter.apps.bucket_id"];
          icon?: parameters["rowFilter.apps.icon"];
          mode?: parameters["rowFilter.apps.mode"];
          user_id?: parameters["rowFilter.apps.user_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["apps"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** apps */
          apps?: definitions["apps"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apps.id"];
          created_at?: parameters["rowFilter.apps.created_at"];
          name?: parameters["rowFilter.apps.name"];
          version?: parameters["rowFilter.apps.version"];
          bucket_id?: parameters["rowFilter.apps.bucket_id"];
          icon?: parameters["rowFilter.apps.icon"];
          mode?: parameters["rowFilter.apps.mode"];
          user_id?: parameters["rowFilter.apps.user_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apps.id"];
          created_at?: parameters["rowFilter.apps.created_at"];
          name?: parameters["rowFilter.apps.name"];
          version?: parameters["rowFilter.apps.version"];
          bucket_id?: parameters["rowFilter.apps.bucket_id"];
          icon?: parameters["rowFilter.apps.icon"];
          mode?: parameters["rowFilter.apps.mode"];
          user_id?: parameters["rowFilter.apps.user_id"];
        };
        body: {
          /** apps */
          apps?: definitions["apps"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.users.created_at"];
          image_url?: parameters["rowFilter.users.image_url"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          country?: parameters["rowFilter.users.country"];
          email?: parameters["rowFilter.users.email"];
          id?: parameters["rowFilter.users.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.users.created_at"];
          image_url?: parameters["rowFilter.users.image_url"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          country?: parameters["rowFilter.users.country"];
          email?: parameters["rowFilter.users.email"];
          id?: parameters["rowFilter.users.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.users.created_at"];
          image_url?: parameters["rowFilter.users.image_url"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          country?: parameters["rowFilter.users.country"];
          email?: parameters["rowFilter.users.email"];
          id?: parameters["rowFilter.users.id"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  apikeys: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: uuid */
    user_id: string;
    /** Format: character varying */
    key: string;
  };
  apps: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
    /** Format: character varying */
    version?: string;
    /** Format: character varying */
    bucket_id: string;
    /** Format: character varying */
    icon: string;
    /** Format: public.app_mode */
    mode: "prod" | "dev" | "livereload";
    /** Format: uuid */
    user_id: string;
  };
  users: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    image_url?: string;
    /** Format: character varying */
    first_name?: string;
    /** Format: character varying */
    last_name?: string;
    /** Format: character varying */
    country?: string;
    /** Format: character varying */
    email: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
}

export interface parameters {
  /** @description Preference */
  preferParams: "params=single-object";
  /** @description Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** @description Preference */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description apikeys */
  "body.apikeys": definitions["apikeys"];
  /** Format: bigint */
  "rowFilter.apikeys.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.apikeys.created_at": string;
  /** Format: uuid */
  "rowFilter.apikeys.user_id": string;
  /** Format: character varying */
  "rowFilter.apikeys.key": string;
  /** @description apps */
  "body.apps": definitions["apps"];
  /** Format: bigint */
  "rowFilter.apps.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.apps.created_at": string;
  /** Format: character varying */
  "rowFilter.apps.name": string;
  /** Format: character varying */
  "rowFilter.apps.version": string;
  /** Format: character varying */
  "rowFilter.apps.bucket_id": string;
  /** Format: character varying */
  "rowFilter.apps.icon": string;
  /** Format: public.app_mode */
  "rowFilter.apps.mode": string;
  /** Format: uuid */
  "rowFilter.apps.user_id": string;
  /** @description users */
  "body.users": definitions["users"];
  /** Format: timestamp with time zone */
  "rowFilter.users.created_at": string;
  /** Format: character varying */
  "rowFilter.users.image_url": string;
  /** Format: character varying */
  "rowFilter.users.first_name": string;
  /** Format: character varying */
  "rowFilter.users.last_name": string;
  /** Format: character varying */
  "rowFilter.users.country": string;
  /** Format: character varying */
  "rowFilter.users.email": string;
  /** Format: uuid */
  "rowFilter.users.id": string;
}

export interface operations {}

export interface external {}
