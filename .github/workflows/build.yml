name: Build source code and send to Capgo

on:
  push:
    tags:
      - '*'
      
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: "Build code and release"
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: latest
      - name: Configure Homebrew cache
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew/supabase--*
            ~/Library/Caches/Homebrew/downloads/*--supabase-*
          key: ${{ runner.os }}-brew-${{ hashFiles('.github/brew-formulae') }}
          restore-keys: ${{ runner.os }}-brew-
      - name: Install Supabase CLI Homebrew dependencies
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install supabase/tap/supabase
      - name: Install dependencies
        id: install_code
        run: pnpm i   
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-     
      - name: Lint
        id: lint_code
        run: pnpm lint
      - name: Build
        id: build_code
        run: pnpm build
        env:
          VITE_APP_URL: ${{ secrets.VITE_APP_URL }}
          VITE_VAPID_KEY: ${{ secrets.VITE_VAPID_KEY }}
          VITE_FIREBASE_CONFIG: ${{ secrets.VITE_FIREBASE_CONFIG }}
      - name: Update functions Alpha
        if: "contains(github.ref, '-alpha.')"
        id: update_functions_preprod
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
          BRANCH: development
        run: node scripts/deploy_functions.mjs  
      - name: Update functions
        if: "!contains(github.ref, '-alpha.')"
        id: update_functions_prod
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
        run: node scripts/deploy_functions.mjs 
      - name: Create Release Alpha
        if: "contains(github.ref, '-alpha.')"
        id: create_release_prepro
        run: npx @capgo/cli@latest upload -a ${{ secrets.CAPGO_TOKEN }} -c alpha
      - name: Create Release Production
        if: "!contains(github.ref, '-alpha.')"
        id: create_release_prod
        run: npx @capgo/cli@latest upload -a ${{ secrets.CAPGO_TOKEN }} -c production